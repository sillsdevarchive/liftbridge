//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SIL.LiftBridge.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SIL.LiftBridge.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to basic.
        /// </summary>
        public static string kBasicFailureFileContents {
            get {
                return ResourceManager.GetString("kBasicFailureFileContents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FLEx reported it was not able to do the initial import. Lift Bridge will protect its shared data from loss by requiring FLEx to retry the initial import, until it is successful. Retry attempts will start with the next Send/Receive attempt. Sorry for the inconvenience, but a new version of FLEx will likely be required in order to continue using Send/Receive..
        /// </summary>
        public static string kBasicImportFailureMessage {
            get {
                return ResourceManager.GetString("kBasicImportFailureMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot clone onto an existing directory ({0}).
        /// </summary>
        public static string kCloneTrouble {
            get {
                return ResourceManager.GetString("kCloneTrouble", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not get an existing Lift system..
        /// </summary>
        public static string kDidNotCloneSystem {
            get {
                return ResourceManager.GetString("kDidNotCloneSystem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export LIFT Lexicon.
        /// </summary>
        public static string kExportLiftLexicon {
            get {
                return ResourceManager.GetString("kExportLiftLexicon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fixing relation links between imported entries.
        /// </summary>
        public static string kFixingRelationLinks {
            get {
                return ResourceManager.GetString("kFixingRelationLinks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FLEx Import failure.
        /// </summary>
        public static string kFlexImportFailureTitle {
            get {
                return ResourceManager.GetString("kFlexImportFailureTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FLEx reported it was not able to import the changes received. Lift Bridge will protect its shared data from loss by requiring FLEx to retry the import, until it is successful. Retry attempts will start with the next Send/Receive attempt. Sorry for the inconvenience, but a new version of FLEx will likely be required in order to continue using Send/Receive..
        /// </summary>
        public static string kFlexStandardImportFailureMessage {
            get {
                return ResourceManager.GetString("kFlexStandardImportFailureMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import LIFT Lexicon.
        /// </summary>
        public static string kImportLiftlexicon {
            get {
                return ResourceManager.GetString("kImportLiftlexicon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LIFT Collaboration.
        /// </summary>
        public static string kLabel {
            get {
                return ResourceManager.GetString("kLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LiftBridge Processing.
        /// </summary>
        public static string kLiftBridgeProcessing {
            get {
                return ResourceManager.GetString("kLiftBridgeProcessing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LIFT Lexicon File (*.lift)|*.lift.
        /// </summary>
        public static string kLiftFileFilter {
            get {
                return ResourceManager.GetString("kLiftFileFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lift Setup.
        /// </summary>
        public static string kLiftSetUp {
            get {
                return ResourceManager.GetString("kLiftSetUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Migrating from LIFT version {0} to version {1}.
        /// </summary>
        public static string kLiftVersionMigration {
            get {
                return ResourceManager.GetString("kLiftVersionMigration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading various lists for lookup during import.
        /// </summary>
        public static string kLoadingListInfo {
            get {
                return ResourceManager.GetString("kLoadingListInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Locate Lift File.
        /// </summary>
        public static string kLocateLiftFile {
            get {
                return ResourceManager.GetString("kLocateLiftFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected LIFT file appears to have been simply exported, and cannot be used for sharing. Please try another LIFT file..
        /// </summary>
        public static string kLoneLiftFileWarning {
            get {
                return ResourceManager.GetString("kLoneLiftFileWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Something went wrong while FLEx was attempting to import {0}..
        /// </summary>
        public static string kProblem {
            get {
                return ResourceManager.GetString("kProblem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Something went wrong trying to import {0} while merging...
        /// </summary>
        public static string kProblemImportWhileMerging {
            get {
                return ResourceManager.GetString("kProblemImportWhileMerging", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Problem Merging.
        /// </summary>
        public static string kProblemMerging {
            get {
                return ResourceManager.GetString("kProblemMerging", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation cannot be undone..
        /// </summary>
        public static string kRedoDescription {
            get {
                return ResourceManager.GetString("kRedoDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value for RepositoryIdentifier may not be null or an empty string..
        /// </summary>
        public static string kRepoIdNotNull {
            get {
                return ResourceManager.GetString("kRepoIdNotNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chorus Send/Receive.
        /// </summary>
        public static string kSendReceive {
            get {
                return ResourceManager.GetString("kSendReceive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exporting {0} entries from the lexicon.
        /// </summary>
        public static string ksExportingEntries {
            get {
                return ResourceManager.GetString("ksExportingEntries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to standard.
        /// </summary>
        public static string kStandardFailureFileContents {
            get {
                return ResourceManager.GetString("kStandardFailureFileContents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LIFT Bridge: {0}.
        /// </summary>
        public static string kTitle {
            get {
                return ResourceManager.GetString("kTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsupported LIFT file.
        /// </summary>
        public static string kUnsipportedLiftFile {
            get {
                return ResourceManager.GetString("kUnsipportedLiftFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This utility allows for: 1) exporting FLEx lexical data in the LIFT format, 2) sending it to other LIFT users, and 3) receiving entries from them..
        /// </summary>
        public static string kWhatDescription {
            get {
                return ResourceManager.GetString("kWhatDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When you want to share lexical entries with another application that uses LIFT data..
        /// </summary>
        public static string kWhenDescription {
            get {
                return ResourceManager.GetString("kWhenDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder Already Exists.
        /// </summary>
        public static string lFolderAlreadyExists {
            get {
                return ResourceManager.GetString("lFolderAlreadyExists", resourceCulture);
            }
        }
    }
}
